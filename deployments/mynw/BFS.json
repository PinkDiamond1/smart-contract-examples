{
  "address": "0x30BF8C0A7CD4808402A78e30171Ba483315D7326",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FileExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "bfsId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "chunks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "filename",
          "type": "string"
        }
      ],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dataStorage",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "filename",
          "type": "string"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "filename",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chunkIndex",
          "type": "uint256"
        }
      ],
      "name": "load",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "filename",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chunkIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8395f3f65d1d5c384dd8c1bc5cb1595dc35c0fb24b414358ef24864ec0cfa7a6",
  "receipt": {
    "to": null,
    "from": "0x5fe9dD4c80ab7742B62Fb40CE1fBE37D226645A1",
    "contractAddress": "0x30BF8C0A7CD4808402A78e30171Ba483315D7326",
    "transactionIndex": 0,
    "gasUsed": "599825",
    "logsBloom": "0x
    "blockHash": "0x05571752305769c75848d4f419b6309f33c0469095d18d763475f9c0eae4a903",
    "transactionHash": "0x8395f3f65d1d5c384dd8c1bc5cb1595dc35c0fb24b414358ef24864ec0cfa7a6",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "599825",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4afe04f12097b5b349d9d937c5a37156",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FileExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"bfsId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"chunks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dataStorage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chunkIndex\",\"type\":\"uint256\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"filename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chunkIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"BFS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\nerror FileExists();\\n\\ncontract BFS {\\n\\tusing Counters for Counters.Counter;\\n\\tCounters.Counter private idCounter;\\n\\tmapping(address => mapping(string => mapping(uint256 => bytes))) public dataStorage;\\n\\tmapping(address => mapping(string => uint256)) public chunks; // max chunk index\\n\\tmapping(address => mapping(string => uint256)) public bfsId;\\n\\n\\tconstructor () {\\n\\t\\tidCounter.increment(); // start from 1\\n\\t}\\n\\n\\tfunction store(string memory filename, uint256 chunkIndex, bytes memory _data) external {\\n\\t\\tif (dataStorage[msg.sender][filename][chunkIndex].length > 0) {\\n\\t\\t\\trevert FileExists();\\n\\t\\t}\\n\\t\\tdataStorage[msg.sender][filename][chunkIndex] = _data;\\n\\t\\tif (chunks[msg.sender][filename] < chunkIndex) {\\n\\t\\t\\tchunks[msg.sender][filename] = chunkIndex;\\n\\t\\t}\\n\\t\\tbfsId[msg.sender][filename] = idCounter.current();\\n\\t\\tidCounter.increment();\\n\\t}\\n\\n\\tfunction load(address addr, string memory filename, uint256 chunkIndex) public view returns (bytes memory, int256) {\\n\\t\\tuint256 temp = chunkIndex + 1;\\n\\t\\tint256 nextChunk = (temp > chunks[addr][filename]) ? -1 : int256(temp);\\n\\t\\treturn (dataStorage[addr][filename][chunkIndex], nextChunk);\\n\\t}\\n\\n\\tfunction count(address addr, string memory filename) public view returns (uint256) {\\n\\t\\treturn chunks[addr][filename];\\n\\t}\\n\\n\\tfunction getId(address addr, string memory filename) public view returns (uint256) {\\n\\t\\treturn bfsId[addr][filename];\\n\\t}\\n}\\n\",\"keccak256\":\"0x0694ed16afdcbd0428821d96ce21b343c9ed93fc7590d0196f1016872f673c80\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610025600061002a60201b6105431760201c565b610033565b80546001019055565b610981806100426000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e567641161005b578063a0e56764146100f9578063ba67e6411461011a578063d92e741e1461012d578063e0f64a381461014d57600080fd5b806385273a90146100825780638a5ca90b146100d1578063928a4b3e146100e4575b600080fd5b6100be61009036600461061b565b6002602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6040519081526020015b60405180910390f35b6100be6100df36600461061b565b610189565b6100f76100f2366004610669565b6101c7565b005b61010c6101073660046106ea565b610322565b6040516100c8929190610791565b6100be61012836600461061b565b610461565b61014061013b3660046106ea565b610487565b6040516100c891906107b3565b6100be61015b36600461061b565b6003602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6001600160a01b03821660009081526003602052604080822090516101af9084906107c6565b90815260200160405180910390205490505b92915050565b3360009081526001602052604080822090516101e49086906107c6565b90815260200160405180910390206000848152602001908152602001600020805461020e906107e2565b9050111561022f576040516326a5c59b60e01b815260040160405180910390fd5b336000908152600160205260409081902090518291906102509086906107c6565b908152604080516020928190038301902060008681529252902090610275908261086a565b50336000908152600260205260409081902090518391906102979086906107c6565b90815260200160405180910390205410156102de57336000908152600260205260409081902090518391906102cd9086906107c6565b908152604051908190036020019020555b600054336000908152600360205260409081902090516102ff9086906107c6565b9081526040519081900360200190205561031d600080546001019055565b505050565b606060008061033284600161092a565b6001600160a01b0387166000908152600260205260408082209051929350909161035d9088906107c6565b9081526020016040518091039020548211610378578161037c565b6000195b6001600160a01b038816600090815260016020526040908190209051919250906103a79088906107c6565b90815260200160405180910390206000868152602001908152602001600020818180546103d3906107e2565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff906107e2565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b50505050509150935093505050935093915050565b6001600160a01b03821660009081526002602052604080822090516101af9084906107c6565b60016020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902080546104c2906107e2565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee906107e2565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b505050505081565b80546001019055565b80356001600160a01b038116811461056357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561059957610599610568565b604051601f8501601f19908116603f011681019082821181831017156105c1576105c1610568565b816040528093508581528686860111156105da57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261060557600080fd5b6106148383356020850161057e565b9392505050565b6000806040838503121561062e57600080fd5b6106378361054c565b9150602083013567ffffffffffffffff81111561065357600080fd5b61065f858286016105f4565b9150509250929050565b60008060006060848603121561067e57600080fd5b833567ffffffffffffffff8082111561069657600080fd5b6106a2878388016105f4565b94506020860135935060408601359150808211156106bf57600080fd5b508401601f810186136106d157600080fd5b6106e08682356020840161057e565b9150509250925092565b6000806000606084860312156106ff57600080fd5b6107088461054c565b9250602084013567ffffffffffffffff81111561072457600080fd5b610730868287016105f4565b925050604084013590509250925092565b60005b8381101561075c578181015183820152602001610744565b50506000910152565b6000815180845261077d816020860160208601610741565b601f01601f19169290920160200192915050565b6040815260006107a46040830185610765565b90508260208301529392505050565b6020815260006106146020830184610765565b600082516107d8818460208701610741565b9190910192915050565b600181811c908216806107f657607f821691505b60208210810361081657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031d57600081815260208120601f850160051c810160208610156108435750805b601f850160051c820191505b818110156108625782815560010161084f565b505050505050565b815167ffffffffffffffff81111561088457610884610568565b6108988161089284546107e2565b8461081c565b602080601f8311600181146108cd57600084156108b55750858301515b600019600386901b1c1916600185901b178555610862565b600085815260208120601f198616915b828110156108fc578886015182559484019460019091019084016108dd565b508582101561091a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156101c157634e487b7160e01b600052601160045260246000fdfea2646970667358221220b39a1b1323fdb28bab835a1ebc03563eb85ddcdac9cf12732c8526c3aaba8e7964736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e567641161005b578063a0e56764146100f9578063ba67e6411461011a578063d92e741e1461012d578063e0f64a381461014d57600080fd5b806385273a90146100825780638a5ca90b146100d1578063928a4b3e146100e4575b600080fd5b6100be61009036600461061b565b6002602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6040519081526020015b60405180910390f35b6100be6100df36600461061b565b610189565b6100f76100f2366004610669565b6101c7565b005b61010c6101073660046106ea565b610322565b6040516100c8929190610791565b6100be61012836600461061b565b610461565b61014061013b3660046106ea565b610487565b6040516100c891906107b3565b6100be61015b36600461061b565b6003602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6001600160a01b03821660009081526003602052604080822090516101af9084906107c6565b90815260200160405180910390205490505b92915050565b3360009081526001602052604080822090516101e49086906107c6565b90815260200160405180910390206000848152602001908152602001600020805461020e906107e2565b9050111561022f576040516326a5c59b60e01b815260040160405180910390fd5b336000908152600160205260409081902090518291906102509086906107c6565b908152604080516020928190038301902060008681529252902090610275908261086a565b50336000908152600260205260409081902090518391906102979086906107c6565b90815260200160405180910390205410156102de57336000908152600260205260409081902090518391906102cd9086906107c6565b908152604051908190036020019020555b600054336000908152600360205260409081902090516102ff9086906107c6565b9081526040519081900360200190205561031d600080546001019055565b505050565b606060008061033284600161092a565b6001600160a01b0387166000908152600260205260408082209051929350909161035d9088906107c6565b9081526020016040518091039020548211610378578161037c565b6000195b6001600160a01b038816600090815260016020526040908190209051919250906103a79088906107c6565b90815260200160405180910390206000868152602001908152602001600020818180546103d3906107e2565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff906107e2565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b50505050509150935093505050935093915050565b6001600160a01b03821660009081526002602052604080822090516101af9084906107c6565b60016020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902080546104c2906107e2565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee906107e2565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b505050505081565b80546001019055565b80356001600160a01b038116811461056357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561059957610599610568565b604051601f8501601f19908116603f011681019082821181831017156105c1576105c1610568565b816040528093508581528686860111156105da57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261060557600080fd5b6106148383356020850161057e565b9392505050565b6000806040838503121561062e57600080fd5b6106378361054c565b9150602083013567ffffffffffffffff81111561065357600080fd5b61065f858286016105f4565b9150509250929050565b60008060006060848603121561067e57600080fd5b833567ffffffffffffffff8082111561069657600080fd5b6106a2878388016105f4565b94506020860135935060408601359150808211156106bf57600080fd5b508401601f810186136106d157600080fd5b6106e08682356020840161057e565b9150509250925092565b6000806000606084860312156106ff57600080fd5b6107088461054c565b9250602084013567ffffffffffffffff81111561072457600080fd5b610730868287016105f4565b925050604084013590509250925092565b60005b8381101561075c578181015183820152602001610744565b50506000910152565b6000815180845261077d816020860160208601610741565b601f01601f19169290920160200192915050565b6040815260006107a46040830185610765565b90508260208301529392505050565b6020815260006106146020830184610765565b600082516107d8818460208701610741565b9190910192915050565b600181811c908216806107f657607f821691505b60208210810361081657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031d57600081815260208120601f850160051c810160208610156108435750805b601f850160051c820191505b818110156108625782815560010161084f565b505050505050565b815167ffffffffffffffff81111561088457610884610568565b6108988161089284546107e2565b8461081c565b602080601f8311600181146108cd57600084156108b55750858301515b600019600386901b1c1916600185901b178555610862565b600085815260208120601f198616915b828110156108fc578886015182559484019460019091019084016108dd565b508582101561091a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156101c157634e487b7160e01b600052601160045260246000fdfea2646970667358221220b39a1b1323fdb28bab835a1ebc03563eb85ddcdac9cf12732c8526c3aaba8e7964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16903,
        "contract": "contracts/Storage.sol:BFS",
        "label": "idCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)11373_storage"
      },
      {
        "astId": 16911,
        "contract": "contracts/Storage.sol:BFS",
        "label": "dataStorage",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_bytes_storage)))"
      },
      {
        "astId": 16917,
        "contract": "contracts/Storage.sol:BFS",
        "label": "chunks",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      },
      {
        "astId": 16923,
        "contract": "contracts/Storage.sol:BFS",
        "label": "bfsId",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_bytes_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => mapping(uint256 => bytes)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_bytes_storage))"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(uint256 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bytes_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)11373_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 11372,
            "contract": "contracts/Storage.sol:BFS",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}